// <auto-generated />
using System;
using CMSAPI.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CMSAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210830105120_DBInit")]
    partial class DBInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("CMSAPI.Models.Buyer", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("giftuserlimit")
                        .HasColumnType("int");

                    b.Property<int?>("maxlimit")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("id")
                        .HasName("id");

                    b.ToTable("tb_buyer");
                });

            modelBuilder.Entity("CMSAPI.Models.EVoucher", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("buyerid")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("buytype")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdate")
                        .HasColumnType("DateTime");

                    b.Property<string>("description")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("discountpercentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("expirydate")
                        .HasColumnType("DateTime");

                    b.Property<string>("image")
                        .HasColumnType("varchar(1000)");

                    b.Property<sbyte>("isactive")
                        .HasColumnType("tinyint");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("paymentmethod")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<string>("promocode")
                        .HasColumnType("varchar(11)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("id")
                        .HasName("id");

                    b.ToTable("tb_evoucher");
                });

            modelBuilder.Entity("CMSAPI.Models.Purchase", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("buydate")
                        .HasColumnType("DateTime");

                    b.Property<string>("buyerid")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("evoucherid")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("id");

                    b.ToTable("tb_purchase");
                });
#pragma warning restore 612, 618
        }
    }
}
